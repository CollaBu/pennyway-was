bootJar { enabled = false }
jar { enabled = true }

dependencies {
    implementation project(':pennyway-common')

    /* MySQL */
    implementation group: 'com.mysql', name: 'mysql-connector-j', version: '8.3.0'

    /* JPA */
    api group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '3.2.3'

    /* QueryDsl */
    api 'com.querydsl:querydsl-core:5.0.0'
    api 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api:2.1.1"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0"

    /* Redis */
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    testImplementation "org.testcontainers:junit-jupiter:1.19.7"
    testImplementation "org.testcontainers:testcontainers:1.19.7"
    testImplementation "org.testcontainers:mysql:1.19.7"
    testImplementation "com.redis.testcontainers:testcontainers-redis-junit:1.6.4"

    /* Redission */
    implementation 'org.redisson:redisson-spring-boot-starter:3.30.0'
}

def querydslDir = 'src/main/generated'

sourceSets {
    main.java.srcDirs += [querydslDir]
}

configurations {
    querydsl.extendsFrom compileClasspath
}

tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

clean.doLast {
    file(querydslDir).deleteDir()
}